#!/usr/bin/env bash

# Pre-commit hook f√ºr Dev-CLI-Tools
# F√ºhrt grundlegende Codequalit√§tspr√ºfungen durch

# Debug-Modus aktivieren falls gew√ºnsch
# set -x

# Fehler beenden den Hook
set -e

echo "üîç F√ºhre Pre-commit Pr√ºfungen durch..."

# Pr√ºfe Versionskonsistenz
echo "‚úì Pr√ºfe Versionskonsistenz..."
README_VERSION=$(grep -o "version-[0-9.]*" README.md | head -1 | cut -d'-' -f2)
SCRIPT_VERSION=$(grep "^VERSION=" src/dev | cut -d'"' -f2)
echo "  README Version: $README_VERSION"
echo "  Script Version: $SCRIPT_VERSION"

if [ "$README_VERSION" != "$SCRIPT_VERSION" ]; then
  echo "‚ùå Versionen stimmen nicht √ºberein!"
  echo "   README: $README_VERSION"
  echo "   Skript: $SCRIPT_VERSION"
  exit 1
fi

# Pr√ºfe Syntax
echo "‚úì Pr√ºfe Bash-Syntax..."
bash -n src/dev

# Pr√ºfe Ausf√ºhrbarkei
echo "‚úì Pr√ºfe Ausf√ºhrbarkeit des Skripts..."
if [ ! -x src/dev ]; then
  echo "‚ùå Das Skript src/dev ist nicht ausf√ºhrbar!"
  exit 1
fi

# Pr√ºfe Formatierung
echo "‚úì Pr√ºfe Formatierung..."

# Pr√ºfe auf Tabs
echo "  - Suche nach Tabs..."
TAB=$(printf '\t')
TABS_FOUND=$(grep -l "$TAB" src/dev || true)
if [ -n "$TABS_FOUND" ]; then
  echo "‚ùå Tabs gefunden (verwende 4 Spaces statt Tabs):"
  grep -n "$TAB" src/dev | head -5
  exit 1
fi
echo "    Keine Tabs gefunden"

# Pr√ºfe auf Trailing Whitespace
echo "  - Pr√ºfe auf Trailing Whitespace..."
WHITESPACE_FOUND=$(grep -l -E '\s+$' src/dev || true)
if [ -n "$WHITESPACE_FOUND" ]; then
  echo "‚ùå Trailing Whitespace gefunden:"
  grep -n -E '\s+$' src/dev | head -5
  exit 1
fi
echo "    Kein Trailing Whitespace gefunden"

# Pr√ºfe Zeilenl√§nge (nur f√ºr Code, nicht f√ºr Kommentare und Strings)
echo "  - Pr√ºfe Zeilenl√§nge..."
LONG_LINES=$(grep -v '^\s*#' src/dev | grep -v "\"\\|'" | grep -E '.{120,}' || true)
if [ -n "$LONG_LINES" ]; then
  echo "‚ùå Zeilen l√§nger als 120 Zeichen gefunden:"
  echo "$LONG_LINES" | head -5
  exit 1
fi
echo "    Keine zu langen Zeilen gefunden"

echo "‚úÖ Alle Pre-commit Pr√ºfungen bestanden!"
exit 0